AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM

Resources:
  MyApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 512
      Runtime: dotnet8
      Architectures:
        - x86_64    
      Handler: MyLambda::MyLambda.Function::FunctionHandler
      CodeUri: ./src/MyLambda/
      Events:
        ListPosts:
          Type: Api
          Properties:
            Path: /hello-world
            Method: get
            Auth:
              Authorizer: AWS_IAM

  MyRoleToAssume:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyRoleToAssume
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MyPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'execute-api:Invoke'
                Resource: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessRestApi}/*/GET/hello-world'
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt MyApiFunction.Arn
Outputs:
  MyApiEndpoint:
    Description: "API endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello-world"
  MyRole:
    Description: "Role arn"
    Value: !GetAtt MyRoleToAssume.Arn